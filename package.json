{
  "name": "vona-vscode",
  "displayName": "Vona - Official",
  "description": "An extension for Vona offering commands and tools to make your experience more pleasant.",
  "version": "0.0.12",
  "engines": {
    "vscode": "^1.92.0"
  },
  "categories": [
    "Programming Languages",
    "Snippets"
  ],
  "repository": "https://github.com/cabloy/vona-vscode",
  "homepage": "https://vona.js.org",
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/index.js",
  "icon": "assets/vona.png",
  "publisher": "cabloy",
  "license": "MIT",
  "keywords": [
    "Vona",
    "Vue",
    "Vona Framework",
    "VSCode",
    "ioc"
  ],
  "contributes": {
    "commands": [
      {
        "command": "vona.createSuite",
        "title": "Suite",
        "category": "Vona Create"
      },
      {
        "command": "vona.createModule",
        "title": "Module",
        "category": "Vona Create"
      },
      {
        "command": "vona.createLocalBean",
        "title": "Bean: Local",
        "category": "Vona Create"
      },
      {
        "command": "vona.createModelBean",
        "title": "Bean: Model",
        "category": "Vona Create"
      },
      {
        "command": "vona.createStoreBean",
        "title": "Bean: Store",
        "category": "Vona Create"
      },
      {
        "command": "vona.createStyleBean",
        "title": "Bean: Style",
        "category": "Vona Create"
      },
      {
        "command": "vona.createThemeBean",
        "title": "Bean: Theme",
        "category": "Vona Create"
      },
      {
        "command": "vona.createToolBean",
        "title": "Bean: Tool",
        "category": "Vona Create"
      },
      {
        "command": "vona.createGeneralBean",
        "title": "Bean: General",
        "category": "Vona Create"
      },
      {
        "command": "vona.createComponent",
        "title": "Component",
        "category": "Vona Create"
      },
      {
        "command": "vona.createPage",
        "title": "Page",
        "category": "Vona Create"
      },
      {
        "command": "vona.createService",
        "title": "Service",
        "category": "Vona Create"
      },
      {
        "command": "vona.createMock",
        "title": "Mock",
        "category": "Vona Create"
      },
      {
        "command": "vona.initIcon",
        "title": "Icon",
        "category": "Vona Init"
      },
      {
        "command": "vona.initConfig",
        "title": "Config",
        "category": "Vona Init"
      },
      {
        "command": "vona.initConstant",
        "title": "Constant",
        "category": "Vona Init"
      },
      {
        "command": "vona.initLocale",
        "title": "Locale",
        "category": "Vona Init"
      },
      {
        "command": "vona.initError",
        "title": "Error",
        "category": "Vona Init"
      },
      {
        "command": "vona.initLegacy",
        "title": "Legacy",
        "category": "Vona Init"
      },
      {
        "command": "vona.initMonkey",
        "title": "Monkey",
        "category": "Vona Init"
      },
      {
        "command": "vona.refactorPageQuery",
        "title": "Add Page Query",
        "category": "Vona Refactor"
      },
      {
        "command": "vona.refactorPageParams",
        "title": "Add Page Params",
        "category": "Vona Refactor"
      },
      {
        "command": "vona.refactorComponentGeneric",
        "title": "Convert to Generic Component",
        "category": "Vona Refactor"
      },
      {
        "command": "vona.refactorAnotherRender",
        "title": "Create Another Render Bean",
        "category": "Vona Refactor"
      },
      {
        "command": "vona.refactorAnotherStyle",
        "title": "Create Another Style Bean",
        "category": "Vona Refactor"
      },
      {
        "command": "vona.refactorRenamePage",
        "title": "Rename Page",
        "category": "Vona Refactor"
      },
      {
        "command": "vona.refactorComponentProps",
        "title": "Add Component Props",
        "category": "Vona Refactor"
      },
      {
        "command": "vona.refactorComponentEmits",
        "title": "Add Component Emits",
        "category": "Vona Refactor"
      },
      {
        "command": "vona.refactorComponentSlots",
        "title": "Add Component Slots",
        "category": "Vona Refactor"
      },
      {
        "command": "vona.refactorComponentModel",
        "title": "Add v-model",
        "category": "Vona Refactor"
      },
      {
        "command": "vona.refactorRenameComponent",
        "title": "Rename Component",
        "category": "Vona Refactor"
      },
      {
        "command": "vona.toolsMetadata",
        "title": "Generate .metadata",
        "category": "Vona Tools"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "vona.createSuite",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.createModule",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.createLocalBean",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.createModelBean",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.createStoreBean",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.createStyleBean",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.createThemeBean",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.createToolBean",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.createGeneralBean",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.createComponent",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.createPage",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.createService",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.createMock",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.initIcon",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.initConfig",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.initConstant",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.initLocale",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.initError",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.initLegacy",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.initMonkey",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        },
        {
          "command": "vona.refactorPageQuery",
          "when": "vona.hasVonaProject && vona.currentVonaProject && resourcePath=~ /src(\\/|\\\\)page(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)controller\\.ts$/"
        },
        {
          "command": "vona.refactorPageParams",
          "when": "vona.hasVonaProject && vona.currentVonaProject && resourcePath=~ /src(\\/|\\\\)page(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)controller\\.ts$/"
        },
        {
          "command": "vona.refactorComponentGeneric",
          "when": "vona.hasVonaProject && vona.currentVonaProject && resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)controller\\.ts$/"
        },
        {
          "command": "vona.refactorAnotherRender",
          "when": "vona.hasVonaProject && vona.currentVonaProject && (resourcePath=~ /src(\\/|\\\\)page(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)render\\.tsx$/ || resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)render\\.tsx$/)"
        },
        {
          "command": "vona.refactorAnotherStyle",
          "when": "vona.hasVonaProject && vona.currentVonaProject && (resourcePath=~ /src(\\/|\\\\)page(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)style\\.ts$/ || resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)style\\.ts$/)"
        },
        {
          "command": "vona.refactorRenamePage",
          "when": "vona.hasVonaProject && vona.currentVonaProject && resourcePath=~ /src(\\/|\\\\)page(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)controller\\.ts$/"
        },
        {
          "command": "vona.refactorComponentProps",
          "when": "vona.hasVonaProject && vona.currentVonaProject && resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)controller\\.ts$/"
        },
        {
          "command": "vona.refactorComponentEmits",
          "when": "vona.hasVonaProject && vona.currentVonaProject && resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)controller\\.ts$/"
        },
        {
          "command": "vona.refactorComponentSlots",
          "when": "vona.hasVonaProject && vona.currentVonaProject && resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)controller\\.ts$/"
        },
        {
          "command": "vona.refactorComponentModel",
          "when": "vona.hasVonaProject && vona.currentVonaProject && resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)controller\\.ts$/"
        },
        {
          "command": "vona.refactorRenameComponent",
          "when": "vona.hasVonaProject && vona.currentVonaProject && resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)controller\\.ts$/"
        },
        {
          "command": "vona.toolsMetadata",
          "when": "vona.hasVonaProject && vona.currentVonaProject"
        }
      ],
      "explorer/context": [
        {
          "submenu": "vona.create",
          "group": "navigation",
          "when": "vona.hasVonaProject"
        },
        {
          "submenu": "vona.init",
          "group": "navigation",
          "when": "vona.hasVonaProject"
        },
        {
          "submenu": "vona.refactor",
          "group": "navigation",
          "when": "vona.hasVonaProject"
        },
        {
          "submenu": "vona.tools",
          "group": "navigation",
          "when": "vona.hasVonaProject"
        }
      ],
      "vona.create": [
        {
          "command": "vona.createSuite",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)src(\\/|\\\\)suite$/ || resourcePath =~ /(\\/|\\\\)src(\\/|\\\\)suite-vendor$/)"
        },
        {
          "command": "vona.createModule",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)src(\\/|\\\\)module$/ || resourcePath =~ /(\\/|\\\\)src(\\/|\\\\)module-vendor$/ || resourcePath =~ /(\\/|\\\\)src(\\/|\\\\)suite(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)src(\\/|\\\\)suite-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)src(\\/|\\\\)suite(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)modules$/ || resourcePath =~ /(\\/|\\\\)src(\\/|\\\\)suite-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)modules$/)"
        },
        {
          "command": "vona.createLocalBean",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath=~ /src(\\/|\\\\)bean/ || resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath=~ /src(\\/|\\\\)page(\\/|\\\\)[^(\\/|\\\\)]+$/)"
        },
        {
          "command": "vona.createModelBean",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath=~ /src(\\/|\\\\)bean/)"
        },
        {
          "command": "vona.createStoreBean",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath=~ /src(\\/|\\\\)bean/)"
        },
        {
          "command": "vona.createStyleBean",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath=~ /src(\\/|\\\\)bean/)"
        },
        {
          "command": "vona.createThemeBean",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath=~ /src(\\/|\\\\)bean/)"
        },
        {
          "command": "vona.createToolBean",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath=~ /src(\\/|\\\\)bean/)"
        },
        {
          "command": "vona.createGeneralBean",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath=~ /src(\\/|\\\\)bean/)"
        },
        {
          "command": "vona.createComponent",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath=~ /src(\\/|\\\\)component$/)"
        },
        {
          "command": "vona.createPage",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath=~ /src(\\/|\\\\)page$/)"
        },
        {
          "command": "vona.createService",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath=~ /src(\\/|\\\\)service$/)"
        },
        {
          "command": "vona.createMock",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath=~ /(\\/|\\\\)mock$/)"
        }
      ],
      "vona.init": [
        {
          "command": "vona.initIcon",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/)"
        },
        {
          "command": "vona.initConfig",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/)"
        },
        {
          "command": "vona.initConstant",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/)"
        },
        {
          "command": "vona.initLocale",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/)"
        },
        {
          "command": "vona.initError",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/)"
        },
        {
          "command": "vona.initLegacy",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath in vona.arrayProjectRoot || resourcePath in vona.arrayProjectSrc)"
        },
        {
          "command": "vona.initMonkey",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/)"
        }
      ],
      "vona.refactor": [
        {
          "command": "vona.refactorPageQuery",
          "when": "vona.hasVonaProject && (resourcePath=~ /src(\\/|\\\\)page(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath=~ /src(\\/|\\\\)page(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)controller\\.ts$/)"
        },
        {
          "command": "vona.refactorPageParams",
          "when": "vona.hasVonaProject && (resourcePath=~ /src(\\/|\\\\)page(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath=~ /src(\\/|\\\\)page(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)controller\\.ts$/)"
        },
        {
          "command": "vona.refactorComponentGeneric",
          "when": "vona.hasVonaProject && (resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)controller\\.ts$/)"
        },
        {
          "command": "vona.refactorAnotherRender",
          "when": "vona.hasVonaProject && (resourcePath=~ /src(\\/|\\\\)page(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath=~ /src(\\/|\\\\)page(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)render\\.tsx$/ || resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)render\\.tsx$/)"
        },
        {
          "command": "vona.refactorAnotherStyle",
          "when": "vona.hasVonaProject && (resourcePath=~ /src(\\/|\\\\)page(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath=~ /src(\\/|\\\\)page(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)style\\.ts$/ || resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)style\\.ts$/)"
        },
        {
          "command": "vona.refactorRenamePage",
          "when": "vona.hasVonaProject && (resourcePath=~ /src(\\/|\\\\)page(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath=~ /src(\\/|\\\\)page(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)controller\\.ts$/)"
        },
        {
          "command": "vona.refactorComponentProps",
          "when": "vona.hasVonaProject && (resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)controller\\.ts$/)"
        },
        {
          "command": "vona.refactorComponentEmits",
          "when": "vona.hasVonaProject && (resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)controller\\.ts$/)"
        },
        {
          "command": "vona.refactorComponentSlots",
          "when": "vona.hasVonaProject && (resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)controller\\.ts$/)"
        },
        {
          "command": "vona.refactorComponentModel",
          "when": "vona.hasVonaProject && (resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)controller\\.ts$/)"
        },
        {
          "command": "vona.refactorRenameComponent",
          "when": "vona.hasVonaProject && (resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath=~ /src(\\/|\\\\)component(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)controller\\.ts$/)"
        }
      ],
      "vona.tools": [
        {
          "command": "vona.toolsMetadata",
          "when": "vona.hasVonaProject && explorerResourceIsFolder && (resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+$/ || resourcePath =~ /(\\/|\\\\)module(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)module-vendor(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath =~ /(\\/|\\\\)modules(\\/|\\\\)[^(\\/|\\\\)]+(\\/|\\\\)src$/ || resourcePath=~ /src(\\/|\\\\)\\.metadata/)"
        }
      ]
    },
    "submenus": [
      {
        "id": "vona.create",
        "label": "Vona Create"
      },
      {
        "id": "vona.init",
        "label": "Vona Init"
      },
      {
        "id": "vona.refactor",
        "label": "Vona Refactor"
      },
      {
        "id": "vona.tools",
        "label": "Vona Tools"
      }
    ]
  },
  "permissions": [
    "webview",
    "http"
  ],
  "scripts": {
    "vscode:prepublish": "pnpm run package",
    "compile": "pnpm run check-types && pnpm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "pnpm run check-types && pnpm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src --ext ts",
    "test": "vscode-test",
    "publish": "vsce publish --no-dependencies"
  },
  "dependencies": {
    "@cabloy/process-helper": "^1.0.5",
    "@npmcli/config": "^8.3.4",
    "fs-extra": "^11.2.0",
    "semver": "^7.6.2"
  },
  "devDependencies": {
    "@types/fs-extra": "^11.0.4",
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/vscode": "^1.92.0",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.11.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.0",
    "esbuild": "^0.21.5",
    "eslint": "^8.57.0",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.4.5"
  }
}
